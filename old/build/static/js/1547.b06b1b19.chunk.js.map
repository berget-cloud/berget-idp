{"version":3,"file":"static/js/1547.b06b1b19.chunk.js","mappings":"kLAKc,SAAUA,EAAmBC,G,MACvC,MAAM,UAAEC,EAAS,KAAEC,EAAI,gBAAEC,EAAe,SAAEC,EAAQ,QAAEC,GAAYL,GAE1D,OAAEM,IAAWC,EAAAA,EAAAA,GAAU,CACzBJ,kBACAE,aAGE,IAAEG,EAAG,MAAEC,EAAK,KAAEC,EAAI,iBAAEC,GAAqBV,GAEzC,IAAEW,EAAG,OAAEC,GAAWX,EAExB,OACIY,EAAAA,EAAAA,KAACV,EAAQW,OAAAC,OAAA,CACLf,UAAWA,EACXC,KAAMA,EACNC,gBAAiBA,EACjBE,QAASA,EACTY,aAAW,EACXC,gBAAiBP,EAAiBQ,YAAY,YAC9CC,SAAUX,EAAMY,uBAAyBT,EAAI,4BAA8BA,EAAI,oBAC/EU,WAAYV,EAAI,qBAAmB,CAAAW,UAEnCC,EAAAA,EAAAA,MAAA,OAAAT,OAAAC,OAAA,CAAMS,GAAG,yBAAyBC,UAAWpB,EAAO,eAAgBqB,OAAQnB,EAAIoB,YAAaC,OAAO,QAAM,CAAAN,SAAA,EACtGC,EAAAA,EAAAA,MAAA,MAAAT,OAAAC,OAAA,CAAKU,UAAWpB,EAAO,qBAAmB,CAAAiB,SAAA,EACtCT,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKU,UAAWpB,EAAO,wBAAsB,CAAAiB,UACzCT,EAAAA,EAAAA,KAAA,QAAAC,OAAAC,OAAA,CAAOc,QAAQ,WAAWJ,UAAWpB,EAAO,iBAAe,CAAAiB,SACrDd,EAAMsB,sBAEDtB,EAAMuB,4BAELpB,EAAI,SADJA,EAAI,mBAFNA,EAAI,mBAMlBY,EAAAA,EAAAA,MAAA,MAAAT,OAAAC,OAAA,CAAKU,UAAWpB,EAAO,wBAAsB,CAAAiB,SAAA,EACzCT,EAAAA,EAAAA,KAAA,SACImB,KAAK,OACLR,GAAG,WACHS,KAAK,WACLR,UAAWpB,EAAO,gBAClB6B,WAAS,EACTC,aAAoC,QAAtBC,EAAA3B,EAAK4B,yBAAiB,IAAAD,EAAAA,EAAI,GAAE,eAC5B1B,EAAiBQ,YAAY,cAE9CR,EAAiBQ,YAAY,cAC1BL,EAAAA,EAAAA,KAAA,QACIW,GAAG,uBACHC,UAAWpB,EAAO,4BAA2B,YACnC,SACViC,wBAAyB,CACrBC,OAAQ7B,EAAiB8B,IAAI,wBAMjDjB,EAAAA,EAAAA,MAAA,MAAAT,OAAAC,OAAA,CAAKU,UAAWpB,EAAO,mBAAoB,uBAAqB,CAAAiB,SAAA,EAC5DT,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKS,GAAG,kBAAkBC,UAAWpB,EAAO,uBAAqB,CAAAiB,UAC7DT,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKU,UAAWpB,EAAO,8BAA4B,CAAAiB,UAC/CT,EAAAA,EAAAA,KAAA,QAAAS,UACIT,EAAAA,EAAAA,KAAA,IAAAC,OAAAC,OAAA,CAAG0B,KAAMlC,EAAImC,UAAQ,CAAApB,SAAGX,EAAI,2BAKxCE,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKS,GAAG,kBAAkBC,UAAWpB,EAAO,uBAAqB,CAAAiB,UAC7DT,EAAAA,EAAAA,KAAA,SACIY,UAAWpB,EAAO,gBAAiB,uBAAwB,qBAAsB,sBACjF2B,KAAK,SACLW,MAAO/B,EAAO,2BAO1C,C","sources":["../node_modules/keycloakify/src/login/pages/LoginResetPassword.tsx"],"sourcesContent":["import { getKcClsx } from \"keycloakify/login/lib/kcClsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport type { KcContext } from \"../KcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LoginResetPassword(props: PageProps<Extract<KcContext, { pageId: \"login-reset-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { kcClsx } = getKcClsx({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, realm, auth, messagesPerField } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    return (\n        <Template\n            kcContext={kcContext}\n            i18n={i18n}\n            doUseDefaultCss={doUseDefaultCss}\n            classes={classes}\n            displayInfo\n            displayMessage={!messagesPerField.existsError(\"username\")}\n            infoNode={realm.duplicateEmailsAllowed ? msg(\"emailInstructionUsername\") : msg(\"emailInstruction\")}\n            headerNode={msg(\"emailForgotTitle\")}\n        >\n            <form id=\"kc-reset-password-form\" className={kcClsx(\"kcFormClass\")} action={url.loginAction} method=\"post\">\n                <div className={kcClsx(\"kcFormGroupClass\")}>\n                    <div className={kcClsx(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"username\" className={kcClsx(\"kcLabelClass\")}>\n                            {!realm.loginWithEmailAllowed\n                                ? msg(\"username\")\n                                : !realm.registrationEmailAsUsername\n                                  ? msg(\"usernameOrEmail\")\n                                  : msg(\"email\")}\n                        </label>\n                    </div>\n                    <div className={kcClsx(\"kcInputWrapperClass\")}>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            className={kcClsx(\"kcInputClass\")}\n                            autoFocus\n                            defaultValue={auth.attemptedUsername ?? \"\"}\n                            aria-invalid={messagesPerField.existsError(\"username\")}\n                        />\n                        {messagesPerField.existsError(\"username\") && (\n                            <span\n                                id=\"input-error-username\"\n                                className={kcClsx(\"kcInputErrorMessageClass\")}\n                                aria-live=\"polite\"\n                                dangerouslySetInnerHTML={{\n                                    __html: messagesPerField.get(\"username\")\n                                }}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className={kcClsx(\"kcFormGroupClass\", \"kcFormSettingClass\")}>\n                    <div id=\"kc-form-options\" className={kcClsx(\"kcFormOptionsClass\")}>\n                        <div className={kcClsx(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={kcClsx(\"kcFormButtonsClass\")}>\n                        <input\n                            className={kcClsx(\"kcButtonClass\", \"kcButtonPrimaryClass\", \"kcButtonBlockClass\", \"kcButtonLargeClass\")}\n                            type=\"submit\"\n                            value={msgStr(\"doSubmit\")}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["LoginResetPassword","props","kcContext","i18n","doUseDefaultCss","Template","classes","kcClsx","getKcClsx","url","realm","auth","messagesPerField","msg","msgStr","_jsx","Object","assign","displayInfo","displayMessage","existsError","infoNode","duplicateEmailsAllowed","headerNode","children","_jsxs","id","className","action","loginAction","method","htmlFor","loginWithEmailAllowed","registrationEmailAsUsername","type","name","autoFocus","defaultValue","_a","attemptedUsername","dangerouslySetInnerHTML","__html","get","href","loginUrl","value"],"sourceRoot":""}