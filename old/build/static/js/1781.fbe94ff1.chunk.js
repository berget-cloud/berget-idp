"use strict";(self.webpackChunkberget_idp=self.webpackChunkberget_idp||[]).push([[1781],{1781:function(e,t,n){n.r(t),n.d(t,{default:function(){return u}});var s=n(579),a=n(5043),i=n(2591),r=n(9761),l=n(569),c=n(3233);function u(e){const{kcContext:t,i18n:n,doUseDefaultCss:u,Template:d,classes:o}=e,{kcClsx:h}=(0,c.z)({doUseDefaultCss:u,classes:o}),{url:p,isUserIdentified:b,challenge:m,userVerification:j,rpId:g,createTimeout:f,messagesPerField:w,realm:x,registrationDisabled:k,authenticators:C,shouldDisplayAuthenticators:y}=t,{msg:A,msgStr:v,advancedMsg:N}=n,{insertScriptTags:I}=(0,l.p)({componentOrHookName:"WebauthnAuthenticate",scriptTags:[{type:"text/javascript",src:`${p.resourcesCommonPath}/node_modules/jquery/dist/jquery.min.js`},{type:"text/javascript",src:`${p.resourcesPath}/js/base64url.js`},{type:"text/javascript",textContent:`\n\n                    function webAuthnAuthenticate() {\n                        let isUserIdentified = ${b};\n                        if (!isUserIdentified) {\n                            doAuthenticate([]);\n                            return;\n                        }\n                        checkAllowCredentials();\n                    }\n\n                    function checkAllowCredentials() {\n                        let allowCredentials = [];\n                        let authn_use = document.forms['authn_select'].authn_use_chk;\n                    \n                        if (authn_use !== undefined) {\n                            if (authn_use.length === undefined) {\n                                allowCredentials.push({\n                                    id: base64url.decode(authn_use.value, {loose: true}),\n                                    type: 'public-key',\n                                });\n                            } else {\n                                for (let i = 0; i < authn_use.length; i++) {\n                                    allowCredentials.push({\n                                        id: base64url.decode(authn_use[i].value, {loose: true}),\n                                        type: 'public-key',\n                                    });\n                                }\n                            }\n                        }\n                        doAuthenticate(allowCredentials);\n                    }\n\n\n                    function doAuthenticate(allowCredentials) {\n                    \n                        // Check if WebAuthn is supported by this browser\n                        if (!window.PublicKeyCredential) {\n                            $("#error").val("${v("webauthn-unsupported-browser-text")}");\n                            $("#webauth").submit();\n                            return;\n                        }\n                    \n                        let challenge = "${m}";\n                        let userVerification = "${j}";\n                        let rpId = "${g}";\n                        let publicKey = {\n                            rpId : rpId,\n                            challenge: base64url.decode(challenge, { loose: true })\n                        };\n                    \n                        let createTimeout = ${f};\n                        if (createTimeout !== 0) publicKey.timeout = createTimeout * 1000;\n                    \n                        if (allowCredentials.length) {\n                            publicKey.allowCredentials = allowCredentials;\n                        }\n                    \n                        if (userVerification !== 'not specified') publicKey.userVerification = userVerification;\n                    \n                        navigator.credentials.get({publicKey})\n                            .then((result) => {\n                                window.result = result;\n                            \n                                let clientDataJSON = result.response.clientDataJSON;\n                                let authenticatorData = result.response.authenticatorData;\n                                let signature = result.response.signature;\n                            \n                                $("#clientDataJSON").val(base64url.encode(new Uint8Array(clientDataJSON), { pad: false }));\n                                $("#authenticatorData").val(base64url.encode(new Uint8Array(authenticatorData), { pad: false }));\n                                $("#signature").val(base64url.encode(new Uint8Array(signature), { pad: false }));\n                                $("#credentialId").val(result.id);\n                                if(result.response.userHandle) {\n                                    $("#userHandle").val(base64url.encode(new Uint8Array(result.response.userHandle), { pad: false }));\n                                }\n                                $("#webauth").submit();\n                            })\n                            .catch((err) => {\n                                $("#error").val(err);\n                                $("#webauth").submit();\n                            })\n                        ;\n                    }\n\n                `}]});return(0,a.useEffect)((()=>{I()}),[]),(0,s.jsx)(d,Object.assign({kcContext:t,i18n:n,doUseDefaultCss:u,classes:o,displayMessage:!w.existsError("username"),displayInfo:x.password&&x.registrationAllowed&&!k,infoNode:(0,s.jsx)("div",Object.assign({id:"kc-registration"},{children:(0,s.jsxs)("span",{children:[A("noAccount")," ",(0,s.jsx)("a",Object.assign({tabIndex:6,href:p.registrationUrl},{children:A("doRegister")}))]})})),headerNode:A("webauthn-login-title")},{children:(0,s.jsxs)("div",Object.assign({id:"kc-form-webauthn",className:h("kcFormClass")},{children:[(0,s.jsxs)("form",Object.assign({id:"webauth",action:p.loginAction,method:"post"},{children:[(0,s.jsx)("input",{type:"hidden",id:"clientDataJSON",name:"clientDataJSON"}),(0,s.jsx)("input",{type:"hidden",id:"authenticatorData",name:"authenticatorData"}),(0,s.jsx)("input",{type:"hidden",id:"signature",name:"signature"}),(0,s.jsx)("input",{type:"hidden",id:"credentialId",name:"credentialId"}),(0,s.jsx)("input",{type:"hidden",id:"userHandle",name:"userHandle"}),(0,s.jsx)("input",{type:"hidden",id:"error",name:"error"})]})),(0,s.jsxs)("div",Object.assign({className:(0,r.$)(h("kcFormGroupClass"),"no-bottom-margin")},{children:[C&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("form",Object.assign({id:"authn_select",className:h("kcFormClass")},{children:C.authenticators.map((e=>(0,s.jsx)("input",{type:"hidden",name:"authn_use_chk",value:e.credentialId})))})),y&&(0,s.jsxs)(s.Fragment,{children:[C.authenticators.length>1&&(0,s.jsx)("p",Object.assign({className:h("kcSelectAuthListItemTitle")},{children:A("webauthn-available-authenticators")})),(0,s.jsx)("div",Object.assign({className:h("kcFormOptionsClass")},{children:C.authenticators.map(((e,t)=>{var n;return(0,s.jsxs)("div",Object.assign({id:"kc-webauthn-authenticator",className:h("kcSelectAuthListItemClass")},{children:[(0,s.jsx)("div",Object.assign({className:h("kcSelectAuthListItemIconClass")},{children:(0,s.jsx)("i",{className:(0,r.$)((()=>{const t=h(e.transports.iconClass);return t===e.transports.iconClass?h("kcWebAuthnDefaultIcon"):t})(),h("kcSelectAuthListItemIconPropertyClass"))})})),(0,s.jsxs)("div",Object.assign({className:h("kcSelectAuthListItemArrowIconClass")},{children:[(0,s.jsx)("div",Object.assign({id:"kc-webauthn-authenticator-label",className:h("kcSelectAuthListItemHeadingClass")},{children:N(e.label)})),(null===(n=e.transports.displayNameProperties)||void 0===n?void 0:n.length)&&(0,s.jsx)("div",Object.assign({id:"kc-webauthn-authenticator-transport",className:h("kcSelectAuthListItemDescriptionClass")},{children:e.transports.displayNameProperties.map(((e,t,n)=>({displayNameProperty:e,hasNext:t!==n.length-1}))).map((e=>{let{displayNameProperty:t,hasNext:n}=e;return(0,s.jsxs)(a.Fragment,{children:[N(t),n&&(0,s.jsx)("span",{children:", "})]},t)}))})),(0,s.jsxs)("div",Object.assign({className:h("kcSelectAuthListItemDescriptionClass")},{children:[(0,s.jsx)("span",Object.assign({id:"kc-webauthn-authenticator-created-label"},{children:A("webauthn-createdAt-label")})),(0,s.jsx)("span",Object.assign({id:"kc-webauthn-authenticator-created"},{children:e.createdAt}))]})),(0,s.jsx)("div",{className:h("kcSelectAuthListItemFillClass")})]}))]}),t)}))}))]})]}),(0,s.jsx)("div",Object.assign({id:"kc-form-buttons",className:h("kcFormButtonsClass")},{children:(0,s.jsx)("input",{id:"authenticateWebAuthnButton",type:"button",onClick:()=>{(0,i.v)("webAuthnAuthenticate"in window),(0,i.v)("function"===typeof window.webAuthnAuthenticate),window.webAuthnAuthenticate()},autoFocus:!0,value:v("webauthn-doAuthenticate"),className:h("kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass")})}))]}))]}))}))}}}]);
//# sourceMappingURL=1781.fbe94ff1.chunk.js.map