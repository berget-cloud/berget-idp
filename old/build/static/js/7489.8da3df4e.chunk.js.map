{"version":3,"file":"static/js/7489.8da3df4e.chunk.js","mappings":"4LAMc,SAAUA,EAAcC,GAClC,MAAM,UAAEC,EAAS,KAAEC,EAAI,gBAAEC,EAAe,SAAEC,EAAQ,QAAEC,GAAYL,GAE1D,OAAEM,IAAWC,EAAAA,EAAAA,GAAU,CACzBJ,kBACAE,aAGE,IAAEG,EAAG,iBAAEC,EAAgB,yBAAEC,GAA6BT,GAEtD,IAAEU,EAAG,OAAEC,GAAWV,EAExB,OACIW,EAAAA,EAAAA,KAACT,EAAQU,OAAAC,OAAA,CACLd,UAAWA,EACXC,KAAMA,EACNC,gBAAiBA,EACjBE,QAASA,EACTW,gBAAiBP,EAAiBQ,YAAY,QAC9CC,WAAYP,EAAI,YAAU,CAAAQ,UAE1BN,EAAAA,EAAAA,KAAA,OAAAC,OAAAC,OAAA,CAAMK,GAAG,oBAAoBC,UAAWf,EAAO,eAAgBgB,OAAQd,EAAIe,YAAaC,OAAO,QAAM,CAAAL,UACjGN,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKM,UAAWf,EAAO,wBAAsB,CAAAa,UACzCM,EAAAA,EAAAA,MAAA,MAAAX,OAAAC,OAAA,CAAKM,UAAWf,EAAO,2BAAyB,CAAAa,SAAA,EAC5CN,EAAAA,EAAAA,KAAA,IAAAC,OAAAC,OAAA,CAAGK,GAAG,iCAA+B,CAAAD,SAAER,EAAI,4BAC1CD,EAAyBgB,mBAAmBC,KAAI,CAACC,EAAeC,KAC7DJ,EAAAA,EAAAA,MAACK,EAAAA,SAAQ,CAAAX,SAAA,EACLN,EAAAA,EAAAA,KAAA,SACIO,GAAI,qBAAqBS,IACzBR,UAAWf,EAAO,4BAClByB,KAAK,QACLC,KAAK,uBACLC,MAAOL,EAAcR,GACrBc,eAAgBN,EAAcR,KAAOV,EAAyByB,wBAElEtB,EAAAA,EAAAA,KAAA,QAAAC,OAAAC,OAAA,CAAOqB,QAAS,qBAAqBP,IAASR,UAAWf,EAAO,uBAAwB+B,SAAUR,GAAK,CAAAV,UACnGM,EAAAA,EAAAA,MAAA,OAAAX,OAAAC,OAAA,CAAMM,UAAWf,EAAO,kCAAgC,CAAAa,SAAA,EACpDN,EAAAA,EAAAA,KAAA,OAAAC,OAAAC,OAAA,CAAMM,UAAWf,EAAO,oCAAkC,CAAAa,UACtDN,EAAAA,EAAAA,KAAA,KAAGQ,UAAWf,EAAO,+BAA8B,cAAc,aAErEO,EAAAA,EAAAA,KAAA,OAAAC,OAAAC,OAAA,CAAMM,UAAWf,EAAO,iCAA+B,CAAAa,SAAGS,EAAcU,sBAdrEV,EAAcR,OAmBjCP,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKM,UAAWf,EAAO,qBAAmB,CAAAa,UACtCN,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKK,GAAG,kBAAkBC,UAAWf,EAAO,uBAAqB,CAAAa,UAC7DN,EAAAA,EAAAA,KAAA,SACIO,GAAG,2BACHC,UAAWf,EAAO,gBAAiB,uBAAwB,qBAAsB,sBACjFyB,KAAK,SACLE,MAAOrB,EAAO,gCASlD,C","sources":["../node_modules/keycloakify/src/login/pages/LoginResetOtp.tsx"],"sourcesContent":["import { Fragment } from \"react\";\nimport { getKcClsx } from \"keycloakify/login/lib/kcClsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport type { KcContext } from \"../KcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LoginResetOtp(props: PageProps<Extract<KcContext, { pageId: \"login-reset-otp.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { kcClsx } = getKcClsx({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, messagesPerField, configuredOtpCredentials } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    return (\n        <Template\n            kcContext={kcContext}\n            i18n={i18n}\n            doUseDefaultCss={doUseDefaultCss}\n            classes={classes}\n            displayMessage={!messagesPerField.existsError(\"totp\")}\n            headerNode={msg(\"doLogIn\")}\n        >\n            <form id=\"kc-otp-reset-form\" className={kcClsx(\"kcFormClass\")} action={url.loginAction} method=\"post\">\n                <div className={kcClsx(\"kcInputWrapperClass\")}>\n                    <div className={kcClsx(\"kcInfoAreaWrapperClass\")}>\n                        <p id=\"kc-otp-reset-form-description\">{msg(\"otp-reset-description\")}</p>\n                        {configuredOtpCredentials.userOtpCredentials.map((otpCredential, index) => (\n                            <Fragment key={otpCredential.id}>\n                                <input\n                                    id={`kc-otp-credential-${index}`}\n                                    className={kcClsx(\"kcLoginOTPListInputClass\")}\n                                    type=\"radio\"\n                                    name=\"selectedCredentialId\"\n                                    value={otpCredential.id}\n                                    defaultChecked={otpCredential.id === configuredOtpCredentials.selectedCredentialId}\n                                />\n                                <label htmlFor={`kc-otp-credential-${index}`} className={kcClsx(\"kcLoginOTPListClass\")} tabIndex={index}>\n                                    <span className={kcClsx(\"kcLoginOTPListItemHeaderClass\")}>\n                                        <span className={kcClsx(\"kcLoginOTPListItemIconBodyClass\")}>\n                                            <i className={kcClsx(\"kcLoginOTPListItemIconClass\")} aria-hidden=\"true\"></i>\n                                        </span>\n                                        <span className={kcClsx(\"kcLoginOTPListItemTitleClass\")}>{otpCredential.userLabel}</span>\n                                    </span>\n                                </label>\n                            </Fragment>\n                        ))}\n                        <div className={kcClsx(\"kcFormGroupClass\")}>\n                            <div id=\"kc-form-buttons\" className={kcClsx(\"kcFormButtonsClass\")}>\n                                <input\n                                    id=\"kc-otp-reset-form-submit\"\n                                    className={kcClsx(\"kcButtonClass\", \"kcButtonPrimaryClass\", \"kcButtonBlockClass\", \"kcButtonLargeClass\")}\n                                    type=\"submit\"\n                                    value={msgStr(\"doSubmit\")}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["LoginResetOtp","props","kcContext","i18n","doUseDefaultCss","Template","classes","kcClsx","getKcClsx","url","messagesPerField","configuredOtpCredentials","msg","msgStr","_jsx","Object","assign","displayMessage","existsError","headerNode","children","id","className","action","loginAction","method","_jsxs","userOtpCredentials","map","otpCredential","index","Fragment","type","name","value","defaultChecked","selectedCredentialId","htmlFor","tabIndex","userLabel"],"sourceRoot":""}