{"version":3,"file":"static/js/8372.3b13ef7c.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/login/pages/LoginOtp.tsx"],"sourcesContent":["import { Fragment } from \"react\";\nimport { getKcClsx } from \"keycloakify/login/lib/kcClsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport type { KcContext } from \"../KcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LoginOtp(props: PageProps<Extract<KcContext, { pageId: \"login-otp.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { kcClsx } = getKcClsx({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { otpLogin, url, messagesPerField } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    return (\n        <Template\n            kcContext={kcContext}\n            i18n={i18n}\n            doUseDefaultCss={doUseDefaultCss}\n            classes={classes}\n            displayMessage={!messagesPerField.existsError(\"totp\")}\n            headerNode={msg(\"doLogIn\")}\n        >\n            <form id=\"kc-otp-login-form\" className={kcClsx(\"kcFormClass\")} action={url.loginAction} method=\"post\">\n                {otpLogin.userOtpCredentials.length > 1 && (\n                    <div className={kcClsx(\"kcFormGroupClass\")}>\n                        <div className={kcClsx(\"kcInputWrapperClass\")}>\n                            {otpLogin.userOtpCredentials.map((otpCredential, index) => (\n                                <Fragment key={index}>\n                                    <input\n                                        id={`kc-otp-credential-${index}`}\n                                        className={kcClsx(\"kcLoginOTPListInputClass\")}\n                                        type=\"radio\"\n                                        name=\"selectedCredentialId\"\n                                        value={otpCredential.id}\n                                        defaultChecked={otpCredential.id === otpLogin.selectedCredentialId}\n                                    />\n                                    <label htmlFor={`kc-otp-credential-${index}`} className={kcClsx(\"kcLoginOTPListClass\")} tabIndex={index}>\n                                        <span className={kcClsx(\"kcLoginOTPListItemHeaderClass\")}>\n                                            <span className={kcClsx(\"kcLoginOTPListItemIconBodyClass\")}>\n                                                <i className={kcClsx(\"kcLoginOTPListItemIconClass\")} aria-hidden=\"true\"></i>\n                                            </span>\n                                            <span className={kcClsx(\"kcLoginOTPListItemTitleClass\")}>{otpCredential.userLabel}</span>\n                                        </span>\n                                    </label>\n                                </Fragment>\n                            ))}\n                        </div>\n                    </div>\n                )}\n\n                <div className={kcClsx(\"kcFormGroupClass\")}>\n                    <div className={kcClsx(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"otp\" className={kcClsx(\"kcLabelClass\")}>\n                            {msg(\"loginOtpOneTime\")}\n                        </label>\n                    </div>\n                    <div className={kcClsx(\"kcInputWrapperClass\")}>\n                        <input\n                            id=\"otp\"\n                            name=\"otp\"\n                            autoComplete=\"off\"\n                            type=\"text\"\n                            className={kcClsx(\"kcInputClass\")}\n                            autoFocus\n                            aria-invalid={messagesPerField.existsError(\"totp\")}\n                        />\n                        {messagesPerField.existsError(\"totp\") && (\n                            <span\n                                id=\"input-error-otp-code\"\n                                className={kcClsx(\"kcInputErrorMessageClass\")}\n                                aria-live=\"polite\"\n                                dangerouslySetInnerHTML={{\n                                    __html: messagesPerField.get(\"totp\")\n                                }}\n                            />\n                        )}\n                    </div>\n                </div>\n\n                <div className={kcClsx(\"kcFormGroupClass\")}>\n                    <div id=\"kc-form-options\" className={kcClsx(\"kcFormOptionsClass\")}>\n                        <div className={kcClsx(\"kcFormOptionsWrapperClass\")}></div>\n                    </div>\n                    <div id=\"kc-form-buttons\" className={kcClsx(\"kcFormButtonsClass\")}>\n                        <input\n                            className={kcClsx(\"kcButtonClass\", \"kcButtonPrimaryClass\", \"kcButtonBlockClass\", \"kcButtonLargeClass\")}\n                            name=\"login\"\n                            id=\"kc-login\"\n                            type=\"submit\"\n                            value={msgStr(\"doLogIn\")}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["LoginOtp","props","kcContext","i18n","doUseDefaultCss","Template","classes","kcClsx","getKcClsx","otpLogin","url","messagesPerField","msg","msgStr","_jsx","Object","assign","displayMessage","existsError","headerNode","children","_jsxs","id","className","action","loginAction","method","userOtpCredentials","length","map","otpCredential","index","Fragment","type","name","value","defaultChecked","selectedCredentialId","htmlFor","tabIndex","userLabel","autoComplete","autoFocus","dangerouslySetInnerHTML","__html","get"],"sourceRoot":""}