{"version":3,"file":"static/js/9619.e02d934e.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/login/pages/Register.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport type { LazyOrNot } from \"keycloakify/tools/LazyOrNot\";\nimport { getKcClsx, type KcClsx } from \"keycloakify/login/lib/kcClsx\";\nimport type { UserProfileFormFieldsProps } from \"keycloakify/login/UserProfileFormFieldsProps\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport type { KcContext } from \"../KcContext\";\nimport type { I18n } from \"../i18n\";\n\ntype RegisterProps = PageProps<Extract<KcContext, { pageId: \"register.ftl\" }>, I18n> & {\n    UserProfileFormFields: LazyOrNot<(props: UserProfileFormFieldsProps) => JSX.Element>;\n    doMakeUserConfirmPassword: boolean;\n};\n\nexport default function Register(props: RegisterProps) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes, UserProfileFormFields, doMakeUserConfirmPassword } = props;\n\n    const { kcClsx } = getKcClsx({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, messagesPerField, recaptchaRequired, recaptchaSiteKey, termsAcceptanceRequired } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const [isFormSubmittable, setIsFormSubmittable] = useState(false);\n    const [areTermsAccepted, setAreTermsAccepted] = useState(false);\n\n    return (\n        <Template\n            kcContext={kcContext}\n            i18n={i18n}\n            doUseDefaultCss={doUseDefaultCss}\n            classes={classes}\n            headerNode={msg(\"registerTitle\")}\n            displayMessage={messagesPerField.exists(\"global\")}\n            displayRequiredFields\n        >\n            <form id=\"kc-register-form\" className={kcClsx(\"kcFormClass\")} action={url.registrationAction} method=\"post\">\n                <UserProfileFormFields\n                    kcContext={kcContext}\n                    i18n={i18n}\n                    kcClsx={kcClsx}\n                    onIsFormSubmittableValueChange={setIsFormSubmittable}\n                    doMakeUserConfirmPassword={doMakeUserConfirmPassword}\n                />\n                {termsAcceptanceRequired && (\n                    <TermsAcceptance\n                        i18n={i18n}\n                        kcClsx={kcClsx}\n                        messagesPerField={messagesPerField}\n                        areTermsAccepted={areTermsAccepted}\n                        onAreTermsAcceptedValueChange={setAreTermsAccepted}\n                    />\n                )}\n                {recaptchaRequired && (\n                    <div className=\"form-group\">\n                        <div className={kcClsx(\"kcInputWrapperClass\")}>\n                            <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey}></div>\n                        </div>\n                    </div>\n                )}\n                <div className={kcClsx(\"kcFormGroupClass\")}>\n                    <div id=\"kc-form-options\" className={kcClsx(\"kcFormOptionsClass\")}>\n                        <div className={kcClsx(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n                    <div id=\"kc-form-buttons\" className={kcClsx(\"kcFormButtonsClass\")}>\n                        <input\n                            disabled={!isFormSubmittable || (termsAcceptanceRequired && !areTermsAccepted)}\n                            className={kcClsx(\"kcButtonClass\", \"kcButtonPrimaryClass\", \"kcButtonBlockClass\", \"kcButtonLargeClass\")}\n                            type=\"submit\"\n                            value={msgStr(\"doRegister\")}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n\nfunction TermsAcceptance(props: {\n    i18n: I18n;\n    kcClsx: KcClsx;\n    messagesPerField: Pick<KcContext[\"messagesPerField\"], \"existsError\" | \"get\">;\n    areTermsAccepted: boolean;\n    onAreTermsAcceptedValueChange: (areTermsAccepted: boolean) => void;\n}) {\n    const { i18n, kcClsx, messagesPerField, areTermsAccepted, onAreTermsAcceptedValueChange } = props;\n\n    const { msg } = i18n;\n\n    return (\n        <>\n            <div className=\"form-group\">\n                <div className={kcClsx(\"kcInputWrapperClass\")}>\n                    {msg(\"termsTitle\")}\n                    <div id=\"kc-registration-terms-text\">{msg(\"termsText\")}</div>\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className={kcClsx(\"kcLabelWrapperClass\")}>\n                    <input\n                        type=\"checkbox\"\n                        id=\"termsAccepted\"\n                        name=\"termsAccepted\"\n                        className={kcClsx(\"kcCheckboxInputClass\")}\n                        checked={areTermsAccepted}\n                        onChange={e => onAreTermsAcceptedValueChange(e.target.checked)}\n                        aria-invalid={messagesPerField.existsError(\"termsAccepted\")}\n                    />\n                    <label htmlFor=\"termsAccepted\" className={kcClsx(\"kcLabelClass\")}>\n                        {msg(\"acceptTerms\")}\n                    </label>\n                </div>\n                {messagesPerField.existsError(\"termsAccepted\") && (\n                    <div className={kcClsx(\"kcLabelWrapperClass\")}>\n                        <span\n                            id=\"input-error-terms-accepted\"\n                            className={kcClsx(\"kcInputErrorMessageClass\")}\n                            aria-live=\"polite\"\n                            dangerouslySetInnerHTML={{\n                                __html: messagesPerField.get(\"termsAccepted\")\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n        </>\n    );\n}\n"],"names":["Register","props","kcContext","i18n","doUseDefaultCss","Template","classes","UserProfileFormFields","doMakeUserConfirmPassword","kcClsx","getKcClsx","url","messagesPerField","recaptchaRequired","recaptchaSiteKey","termsAcceptanceRequired","msg","msgStr","isFormSubmittable","setIsFormSubmittable","useState","areTermsAccepted","setAreTermsAccepted","_jsx","Object","assign","headerNode","displayMessage","exists","displayRequiredFields","children","_jsxs","id","className","action","registrationAction","method","onIsFormSubmittableValueChange","TermsAcceptance","onAreTermsAcceptedValueChange","href","loginUrl","disabled","type","value","_Fragment","name","checked","onChange","e","target","existsError","htmlFor","dangerouslySetInnerHTML","__html","get"],"sourceRoot":""}